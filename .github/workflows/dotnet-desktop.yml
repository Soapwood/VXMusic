name: VXMusic Desktop Build/Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.x'

    - name: Get Project Version
      uses: kzrnm/get-net-sdk-project-versions-action@v2
      id: get-project-version
      with:
        proj-path: VXMusicDesktop/VXMusicDesktop.csproj

    - name: Get Last Tag Version
      id: previoustag
      uses: 'WyriHaximus/github-action-get-previous-tag@v1'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Generate Next Tag Version
      id: next # ${{ steps.next.outputs.version }}
      uses: 'WyriHaximus/github-action-next-release-version@1.0.0'
      with:
        version: ${{ steps.previoustag.outputs.tag }}

    - name: Update .csproj with Patch version
      run: | # ${{steps.get-project-version.outputs.version}}
        csproj_path="VXMusicDesktop/VXMusicDesktop.csproj"
        version_with_patch=${{ steps.previoustag.outputs.tag }}
        sed -i 's|<Version>.*</Version>|<Version>'$version_with_patch'</Version>|' $csproj_path
      shell: bash

    - name: Install dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Publish x64
      run: dotnet publish -r win-x64 -c Release -o ${{ github.workspace }}/output_x64

    - name: Publish x86
      run: dotnet publish -r win-x86 -c Release -o ${{ github.workspace }}/output_x86

    - name: Package x64
      run: |
        cd ${{ github.workspace }}/output_x64
        Compress-Archive -Path * -DestinationPath ../VXMusic_x64_v${{ steps.previoustag.outputs.tag }}.zip

    - name: Package x86
      run: |
        cd ${{ github.workspace }}/output_x86
        Compress-Archive -Path * -DestinationPath ../VXMusic_x86_v${{ steps.previoustag.outputs.tag }}.zip

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.previoustag.outputs.tag }}
        release_name: VXMusic Release v${{ steps.previoustag.outputs.tag }}
        draft: true
        prerelease: true

    - name: Upload x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/VXMusic_x64_v${{ steps.previoustag.outputs.tag }}.zip
        asset_name: VXMusic_x64_v${{ steps.previoustag.outputs.tag }}.zip
        asset_content_type: application/zip

    - name: Upload x86 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/VXMusic_x86_v${{ steps.previoustag.outputs.tag }}.zip
        asset_name: VXMusic_x86_v${{ steps.previoustag.outputs.tag }}.zip
        asset_content_type: application/zip
