<UserControl x:Class="VXMusicDesktop.MVVM.View.RecognitionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:VXMusicDesktop.MVVM.View"
             xmlns:custom="clr-namespace:VXMusicDesktop.Theme"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             Background="Transparent"
             d:DataContext="{d:DesignInstance}">

    <UserControl.Resources>
        <BitmapImage x:Key="ShazamLogo"
                     UriSource="{Binding Source={x:Static custom:UIImageManager.ShazamLogo}, Path=UriSource}" />
        
        <BitmapImage x:Key="AudDLogo"
                     UriSource="{Binding Source={x:Static custom:UIImageManager.AudDLogo}, Path=UriSource}" />
        
        <BitmapImage x:Key="RecordIcon"
                     UriSource="{Binding Source={x:Static custom:UIImageManager.RecordIcon}, Path=UriSource}" />

        <SolidColorBrush x:Key="PrimaryColor"
                         Color="{Binding Source={x:Static custom:ColourSchemeManager.PrimaryColour}, Path=Color}" />
        <SolidColorBrush x:Key="SecondaryColor"
                         Color="{Binding Source={x:Static custom:ColourSchemeManager.SecondaryColour}, Path=Color}" />
        <SolidColorBrush x:Key="Accent1Colour"
                         Color="{Binding Source={x:Static custom:ColourSchemeManager.Accent1Colour}, Path=Color}" />
        <SolidColorBrush x:Key="Accent2Colour"
                         Color="{Binding Source={x:Static custom:ColourSchemeManager.Accent2Colour}, Path=Color}" />
        <SolidColorBrush x:Key="TextBasic"
                         Color="{Binding Source={x:Static custom:ColourSchemeManager.TextBasic}, Path=Color}" />

        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <custom:BooleanToColorConverter x:Key="BooleanToColorConverter" />
        <custom:SolidColorBrushToColorConverter x:Key="SolidColorBrushToColorConverter" />
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding RecognitionViewLoaded}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <StackPanel>
        <TextBlock Name="RecognitionTextHeader"
                   Text="Choose Recognition API"
                   Foreground="{StaticResource TextBasic}"
                   FontSize="28"
                   HorizontalAlignment="Left"
                   Margin="10,0,0,10" />
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <!-- First row definition: "Auto" adjusts height to content -->
                <RowDefinition Height="*" />
                <!-- Second row definition: "*" takes up remaining space -->
            </Grid.RowDefinitions>
            
        <StackPanel Orientation="Horizontal">
            <StackPanel Orientation="Vertical"
                        Margin="0,0,0,0">

                <Button x:Name="RecognitionIntegrationEnableShazamApiButton"
                        Command="{Binding ShazamButtonClick}"
                        Width="300" Height="100"
                        Cursor="Hand"
                        Margin="20,0,10,0"
                        IsEnabled="true">

                    <Button.Resources>
                        <LinearGradientBrush x:Key="ButtonNormalGradientBrush" StartPoint="0,0" EndPoint="1,2">
                            <GradientStop Offset="0.0"
                                          Color="{Binding Source={StaticResource SecondaryColor}, Converter={StaticResource SolidColorBrushToColorConverter}}" />
                            <GradientStop Offset="0.7"
                                          Color="{Binding Source={StaticResource Accent1Colour}, Converter={StaticResource SolidColorBrushToColorConverter}}" />
                        </LinearGradientBrush>
                        <LinearGradientBrush x:Key="ButtonHoverGradientBrush" StartPoint="0,0" EndPoint="1,2">
                            <!-- Modify these colors for the hover effect -->
                            <GradientStop Offset="0.0"
                                          Color="{Binding Source={StaticResource SecondaryColor}, Converter={StaticResource SolidColorBrushToColorConverter}}" />
                            <GradientStop Offset="1.0"
                                          Color="{Binding Source={StaticResource Accent2Colour}, Converter={StaticResource SolidColorBrushToColorConverter}}" />
                        </LinearGradientBrush>
                    </Button.Resources>

                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Width="300" Height="100" CornerRadius="10"
                                    Background="{TemplateBinding Background}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames
                                                    Storyboard.TargetProperty="(Border.Background)">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                            Value="{StaticResource ButtonHoverGradientBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <!-- Column for the icon -->
                                        <ColumnDefinition Width="*" />
                                        <!-- Column for the text -->
                                        <ColumnDefinition Width="Auto" />
                                        <!-- Column for the button -->
                                    </Grid.ColumnDefinitions>

                                    <Image Grid.Column="0"
                                           Width="80"
                                           Height="80"
                                           Source="{StaticResource ShazamLogo}"
                                           RenderOptions.BitmapScalingMode="HighQuality"
                                           RenderTransformOrigin="0.5,0.5"
                                           Margin="15,0,0,0" />
                                    <StackPanel Grid.Column="1"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"
                                                Orientation="Horizontal">
                                        <TextBlock x:Name="RecognitionIntegration1HeaderText"
                                                   Text="Shazam"
                                                   Foreground="{StaticResource TextBasic}"
                                                   FontSize="18"
                                                   Margin="20,0,0,0"
                                                   VerticalAlignment="Center" />
                                        <Ellipse Width="10"
                                                 Height="10"
                                                 Margin="10,5,0,0"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center">
                                            <Ellipse.Fill>
                                                <SolidColorBrush
                                                    Color="{Binding SharedViewModel.IsShazamApiConnected, Converter={StaticResource BooleanToColorConverter}}" />
                                            </Ellipse.Fill>
                                        </Ellipse>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>

                    <Button.Background>
                        <StaticResource ResourceKey="ButtonNormalGradientBrush" />
                    </Button.Background>
                </Button>

                <!-- BYOAPI -->
                <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                    <CheckBox x:Name="ShazamByoApiCheckBox"
                              Content="Enable BYOAPI"
                              Cursor="Hand"
                              IsChecked="{Binding IsShazamByoApiEnabled}"
                              IsEnabled="{Binding IsShazamApiEnabled}"
                              VerticalAlignment="Center" HorizontalAlignment="Left"
                              Margin="20,0,0,0"
                              Height="30"
                              Style="{StaticResource CustomCheckBoxStyle}"
                              Checked="ShazamByoApiCheckButtonChecked" Unchecked="ShazamByoApiCheckButtonUnchecked" />
                    <StackPanel Orientation="Horizontal">
                        <Grid>
                            <PasswordBox x:Name="ShazamByoApiPasswordBox"
                                         Visibility="{Binding IsShazamByoApiEnabled, Converter={StaticResource BoolToVis}}"
                                         Style="{StaticResource ModernApiBox}"
                                         IsEnabled="{Binding IsShazamByoApiEnabled}"
                                         Margin="10,0,0,0"
                                         PasswordChanged="ShazamByoApiPasswordBoxChanged"
                                         GotFocus="ShazamByoApiPasswordBoxGotFocus"
                                         LostFocus="ShazamByoApiPasswordBoxLostFocus" />
                            <Canvas>
                                <TextBlock x:Name="ShazamByoApiPasswordBoxHintText"
                                           Text="•••••••••••••••••••••••••••••••••••"
                                           Foreground="{StaticResource TextBasic}"
                                           Visibility="{Binding ShouldShazamByoApiPlaceholderBeShown, Converter={StaticResource BoolToVis}}"
                                           IsHitTestVisible="False"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="20"
                                           Width="260"
                                           Height="30"
                                           Panel.ZIndex="6"
                                           Margin="17,0,0,0" />
                            </Canvas>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </StackPanel>

            <StackPanel Orientation="Vertical"
                        Margin="0,0,0,0">

                <Button x:Name="RecognitionIntegrationEnableAudDApiButton"
                        Command="{Binding AudDButtonClick}"
                        Width="300" Height="100"
                        Cursor="Hand"
                        Margin="20,0,10,0"
                        IsEnabled="true">

                    <Button.Resources>
                        <LinearGradientBrush x:Key="ButtonNormalGradientBrush" StartPoint="0,0" EndPoint="1,2">
                            <GradientStop Offset="0.0"
                                          Color="{Binding Source={StaticResource SecondaryColor}, Converter={StaticResource SolidColorBrushToColorConverter}}" />
                            <GradientStop Offset="0.5"
                                          Color="{Binding Source={StaticResource Accent1Colour}, Converter={StaticResource SolidColorBrushToColorConverter}}" />
                        </LinearGradientBrush>
                        <LinearGradientBrush x:Key="ButtonHoverGradientBrush" StartPoint="0,0" EndPoint="1,2">
                            <!-- Modify these colors for the hover effect -->
                            <GradientStop Offset="0.0"
                                          Color="{Binding Source={StaticResource SecondaryColor}, Converter={StaticResource SolidColorBrushToColorConverter}}" />
                            <GradientStop Offset="1.0"
                                          Color="{Binding Source={StaticResource Accent2Colour}, Converter={StaticResource SolidColorBrushToColorConverter}}" />
                        </LinearGradientBrush>
                    </Button.Resources>

                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Width="300" Height="100" CornerRadius="10"
                                    Background="{TemplateBinding Background}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames
                                                    Storyboard.TargetProperty="(Border.Background)">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                            Value="{StaticResource ButtonHoverGradientBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <!-- Column for the icon -->
                                        <ColumnDefinition Width="*" />
                                        <!-- Column for the text -->
                                        <ColumnDefinition Width="Auto" />
                                        <!-- Column for the button -->
                                    </Grid.ColumnDefinitions>

                                    <Image Grid.Column="0"
                                           Width="80"
                                           Height="80"
                                           Source="{StaticResource AudDLogo}"
                                           RenderOptions.BitmapScalingMode="HighQuality"
                                           RenderTransformOrigin="0.5,0.5"
                                           Margin="15,0,0,0" />
                                    <StackPanel Grid.Column="1"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"
                                                Orientation="Horizontal">
                                        <TextBlock x:Name="RecognitionIntegration2HeaderText"
                                                   Text="AudD.io"
                                                   Foreground="{StaticResource TextBasic}"
                                                   FontSize="18"
                                                   Margin="20,0,0,0"
                                                   VerticalAlignment="Center" />
                                        <Ellipse Width="10"
                                                 Height="10"
                                                 Margin="10,5,0,0"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center">
                                            <Ellipse.Fill>
                                                <SolidColorBrush
                                                    Color="{Binding SharedViewModel.IsAudDApiConnected, Converter={StaticResource BooleanToColorConverter}}" />
                                            </Ellipse.Fill>
                                        </Ellipse>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>

                    <Button.Background>
                        <StaticResource ResourceKey="ButtonNormalGradientBrush" />
                    </Button.Background>
                </Button>

                <!-- BYOAPI -->
                <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                    <CheckBox x:Name="AudDByoApiCheckBox"
                              Content="Enable BYOAPI"
                              Cursor="Hand"
                              IsChecked="{Binding IsAudDByoApiEnabled, Mode=TwoWay}"
                              IsEnabled="{Binding IsAudDApiEnabled, Mode=TwoWay}"
                              Margin="20,0,0,0"
                              Height="30"
                              VerticalAlignment="Center" HorizontalAlignment="Left"
                              Style="{StaticResource CustomCheckBoxStyle}"
                              Checked="AudDByoApiCheckButtonChecked" Unchecked="AudDByoApiCheckButtonUnchecked" />
                    <StackPanel Orientation="Horizontal">
                        <Grid>
                            <PasswordBox x:Name="AudDByoApiPasswordBox"
                                         Visibility="{Binding IsAudDByoApiEnabled, Converter={StaticResource BoolToVis}}"
                                         IsEnabled="{Binding IsAudDByoApiEnabled}"
                                         Margin="10,0,0,0"
                                         Style="{StaticResource ModernApiBox}"
                                         VerticalAlignment="Center" HorizontalAlignment="Center"
                                         GotFocus="AudDByoApiPasswordBoxGotFocus"
                                         LostFocus="AudDByoApiPasswordBoxLostFocus"
                                         PasswordChanged="AudDByoApiPasswordBoxChanged" />
                            <Canvas>
                                <TextBlock x:Name="AudDByoApiPasswordBoxHintText"
                                           Text="••••••••••••••••••••••••••••••••••"
                                           Foreground="{StaticResource TextBasic}"
                                           Visibility="{Binding ShouldAudDByoApiPlaceholderBeShown, Converter={StaticResource BoolToVis}}"
                                           IsHitTestVisible="False"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="20"
                                           Width="260"
                                           Height="30"
                                           Panel.ZIndex="6"
                                           Margin="17,0,0,0" />
                            </Canvas>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <StackPanel Grid.Row="1">
            <Button
                x:Name="RunRecognitionButton"
                Content="Run Recognition"
                Command="{Binding ListenButtonClick}"
                IsEnabled="{Binding IsRecognitionReady}"
                Cursor="Hand"
                Padding="0"
                Margin="0,100,0,0"
                FontSize="30"
                Foreground="{StaticResource TextBasic}"
                BorderThickness="0"
                VerticalAlignment="Bottom"
                HorizontalAlignment="Center">
                <Button.Resources>
                    <LinearGradientBrush x:Key="ButtonNormalGradientBrush" StartPoint="0,0" EndPoint="1,2">
                        <GradientStop Offset="0.0"
                                      Color="{Binding Source={StaticResource SecondaryColor}, Converter={StaticResource SolidColorBrushToColorConverter}}" />
                        <GradientStop Offset="0.7"
                                      Color="{Binding Source={StaticResource Accent1Colour}, Converter={StaticResource SolidColorBrushToColorConverter}}" />
                    </LinearGradientBrush>
                    <LinearGradientBrush x:Key="ButtonHoverGradientBrush" StartPoint="0,0" EndPoint="1,2">
                        <!-- Modify these colors for the hover effect -->
                        <GradientStop Offset="0.0"
                                      Color="{Binding Source={StaticResource SecondaryColor}, Converter={StaticResource SolidColorBrushToColorConverter}}" />
                        <GradientStop Offset="1.0"
                                      Color="{Binding Source={StaticResource Accent2Colour}, Converter={StaticResource SolidColorBrushToColorConverter}}" />
                    </LinearGradientBrush>
                </Button.Resources>
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border Width="300" Height="120" CornerRadius="10"
                                Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(Border.Background)">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{StaticResource ButtonHoverGradientBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <StackPanel>
                                    <Image Height="80"
                                           Source="{StaticResource RecordIcon}"
                                           RenderOptions.BitmapScalingMode="HighQuality"
                                           RenderTransformOrigin="0,0"
                                           Margin="0,20,0,0"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center" />
                                </StackPanel>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Button.Template>

                <Button.Background>
                    <StaticResource ResourceKey="ButtonNormalGradientBrush" />
                </Button.Background>
            </Button>
        </StackPanel>
        </Grid>
    </StackPanel>
</UserControl>